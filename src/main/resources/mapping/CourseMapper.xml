<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.cuit.study.dao.CourseMapper">
  <resultMap id="BaseResultMap" type="cn.edu.cuit.study.entity.Course">
    <id column="courseID" jdbcType="INTEGER" property="courseID" />
    <result column="courseName" jdbcType="VARCHAR" property="courseName" />
    <result column="categoryid" jdbcType="INTEGER" property="categoryid" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="teacherName" jdbcType="VARCHAR" property="teacherName" />
    <result column="selectNum" jdbcType="INTEGER" property="selectNum" />
    <result column="uploadtime" jdbcType="VARCHAR" property="uploadtime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    courseID, courseName, categoryid, content, teacherName, selectNum, uploadtime
  </sql>
  <select id="selectByExample" parameterType="cn.edu.cuit.study.entity.CourseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from course
    where courseID = #{courseid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from course
    where courseID = #{courseid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.edu.cuit.study.entity.Course">
    insert into course (courseID, courseName, categoryid, 
      content, teacherName, selectNum, 
      uploadtime)
    values (#{courseid,jdbcType=INTEGER}, #{coursename,jdbcType=VARCHAR}, #{categoryid,jdbcType=INTEGER}, 
      #{content,jdbcType=VARCHAR}, #{teachername,jdbcType=VARCHAR}, #{selectnum,jdbcType=INTEGER}, 
      #{uploadtime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.cuit.study.entity.Course">
    insert into course
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="courseid != null">
        courseID,
      </if>
      <if test="coursename != null">
        courseName,
      </if>
      <if test="categoryid != null">
        categoryid,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="teachername != null">
        teacherName,
      </if>
      <if test="selectnum != null">
        selectNum,
      </if>
      <if test="uploadtime != null">
        uploadtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="courseid != null">
        #{courseid,jdbcType=INTEGER},
      </if>
      <if test="coursename != null">
        #{coursename,jdbcType=VARCHAR},
      </if>
      <if test="categoryid != null">
        #{categoryid,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="teachername != null">
        #{teachername,jdbcType=VARCHAR},
      </if>
      <if test="selectnum != null">
        #{selectnum,jdbcType=INTEGER},
      </if>
      <if test="uploadtime != null">
        #{uploadtime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.cuit.study.entity.CourseExample" resultType="java.lang.Long">
    select count(*) from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update course
    <set>
      <if test="record.courseid != null">
        courseID = #{record.courseid,jdbcType=INTEGER},
      </if>
      <if test="record.coursename != null">
        courseName = #{record.coursename,jdbcType=VARCHAR},
      </if>
      <if test="record.categoryid != null">
        categoryid = #{record.categoryid,jdbcType=INTEGER},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.teachername != null">
        teacherName = #{record.teachername,jdbcType=VARCHAR},
      </if>
      <if test="record.selectnum != null">
        selectNum = #{record.selectnum,jdbcType=INTEGER},
      </if>
      <if test="record.uploadtime != null">
        uploadtime = #{record.uploadtime,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update course
    set courseID = #{record.courseid,jdbcType=INTEGER},
      courseName = #{record.coursename,jdbcType=VARCHAR},
      categoryid = #{record.categoryid,jdbcType=INTEGER},
      content = #{record.content,jdbcType=VARCHAR},
      teacherName = #{record.teachername,jdbcType=VARCHAR},
      selectNum = #{record.selectnum,jdbcType=INTEGER},
      uploadtime = #{record.uploadtime,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.cuit.study.entity.Course">
    update course
    <set>
      <if test="coursename != null">
        courseName = #{coursename,jdbcType=VARCHAR},
      </if>
      <if test="categoryid != null">
        categoryid = #{categoryid,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="teachername != null">
        teacherName = #{teachername,jdbcType=VARCHAR},
      </if>
      <if test="selectnum != null">
        selectNum = #{selectnum,jdbcType=INTEGER},
      </if>
      <if test="uploadtime != null">
        uploadtime = #{uploadtime,jdbcType=VARCHAR},
      </if>
    </set>
    where courseID = #{courseid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.cuit.study.entity.Course">
    update course
    set courseName = #{coursename,jdbcType=VARCHAR},
      categoryid = #{categoryid,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      teacherName = #{teachername,jdbcType=VARCHAR},
      selectNum = #{selectnum,jdbcType=INTEGER},
      uploadtime = #{uploadtime,jdbcType=VARCHAR}
    where courseID = #{courseid,jdbcType=INTEGER}
  </update>

  <select id="selectAllCourse" resultMap="BaseResultMap">
    select * from course;
  </select>

  <select id="selectCourseBySearch" parameterType="java.lang.String" resultMap="BaseResultMap">
    select * from course where courseName like '%'+${search}+'%'
  </select>

</mapper>