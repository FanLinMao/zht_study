<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.cuit.study.dao.StudyCenterMapper">



    <select id="getSelectCourseByUserId" resultType="java.util.HashMap">
        SELECT
            u.userName '当前用户',
            c.courseName '课程名称',
            c.content '课程简介',
            c.teacherName '教师名称',
            c.selectNum as '选该课的人数',
            c.uploadtime '开课时间',
            sc.note '课程笔记'
        FROM
            `user` u,
            selectcourses sc,
            course c
        WHERE
            u.userID = sc.userID
        AND c.courseID = sc.courseID
        AND sc.`select`= 1
        AND u.userID= #{userId}
    </select>

    <select id="getCourseInfoByCourseId" resultType="java.util.HashMap">
        SELECT
            c.courseID ,
            c.courseName ,
            m.categoryName ,
            c.content ,
            c.teacherName ,
            c.selectNum ,
            c.uploadtime
        FROM
            course c,
            category m
        WHERE
            c.categoryid = m.categoryid
        AND
            c.courseID= #{courseId}
    </select>

    <insert id="addCourse" statementType="PREPARED">
        INSERT INTO selectcourses (userID, courseID, `select`)
        VALUES
            (
                (
                    SELECT
                        u.userID
                    FROM
                        `user` u
                    WHERE
                        u.userID = #{userId}
                ),
                (
                    SELECT
                        c.courseID
                    FROM
                        course c
                    WHERE
                        c.courseID = #{courseId}
                ),
                1
            )
    </insert>

    <update id="removeCourse">
        UPDATE selectcourses s
        SET s.`select` = 0
        WHERE
            s.userID = #{userId}
        AND s.courseID = #{courseId}
    </update>

    <update id="updateSelectCourseNumByCourseId">
        UPDATE course c
        SET c.selectNum = c.selectNum + 1
        WHERE
            c.courseID=#{courseId}
    </update>

    <select id="getSelectCourseNumByCourseId" parameterType="int" resultType="int">
        SELECT c.selectNum
        FROM course c
        WHERE c.courseID = #{courseId}
    </select>

    <insert id="addCourseCommentByCourseIdAndUserId">
        INSERT INTO review(courseid, userid, review, reviewtime)
        VALUES (#{courseId}, #{userId}, #{content}, #{date})
    </insert>

    <update id="addCourseNoteByCourseIdAndUserId">
        UPDATE selectcourses SET note=#{note},notetime=#{date}
        WHERE courseId=#{courseId} AND userId=#{userId}
    </update>


    <select id="getReviewsByCourseId" resultType="map">
       select r.review, r.reviewtime from review r where courseid = #{courseId} limit #{startNum},#{pageSize}
    </select>

    <select id="getReviewTotalPage" parameterType="int" resultType="int">
        select count(1) as reviewNum from review where courseid = #{courseId}
    </select>

</mapper>