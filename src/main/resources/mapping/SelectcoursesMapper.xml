<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.cuit.study.dao.SelectcoursesMapper">
  <resultMap id="BaseResultMap" type="cn.edu.cuit.study.entity.Selectcourses">
    <id column="userID" jdbcType="INTEGER" property="userid" />
    <id column="courseID" jdbcType="INTEGER" property="courseid" />
    <result column="select" jdbcType="INTEGER" property="select" />
    <result column="downpath" jdbcType="VARCHAR" property="downpath" />
    <result column="downtime" jdbcType="VARCHAR" property="downtime" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="notetime" jdbcType="VARCHAR" property="notetime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    userID, courseID, select, downpath, downtime, note, notetime
  </sql>
  <select id="selectByExample" parameterType="cn.edu.cuit.study.entity.SelectcoursesExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from selectcourses
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="cn.edu.cuit.study.entity.SelectcoursesKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from selectcourses
    where userID = #{userid,jdbcType=INTEGER}
      and courseID = #{courseid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="cn.edu.cuit.study.entity.SelectcoursesKey">
    delete from selectcourses
    where userID = #{userid,jdbcType=INTEGER}
      and courseID = #{courseid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.edu.cuit.study.entity.Selectcourses">
    insert into selectcourses (userID, courseID, select, 
      downpath, downtime, note, 
      notetime)
    values (#{userid,jdbcType=INTEGER}, #{courseid,jdbcType=INTEGER}, #{select,jdbcType=INTEGER}, 
      #{downpath,jdbcType=VARCHAR}, #{downtime,jdbcType=VARCHAR}, #{note,jdbcType=VARCHAR}, 
      #{notetime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.cuit.study.entity.Selectcourses">
    insert into selectcourses
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        userID,
      </if>
      <if test="courseid != null">
        courseID,
      </if>
      <if test="select != null">
        select,
      </if>
      <if test="downpath != null">
        downpath,
      </if>
      <if test="downtime != null">
        downtime,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="notetime != null">
        notetime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="courseid != null">
        #{courseid,jdbcType=INTEGER},
      </if>
      <if test="select != null">
        #{select,jdbcType=INTEGER},
      </if>
      <if test="downpath != null">
        #{downpath,jdbcType=VARCHAR},
      </if>
      <if test="downtime != null">
        #{downtime,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="notetime != null">
        #{notetime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.cuit.study.entity.SelectcoursesExample" resultType="java.lang.Long">
    select count(*) from selectcourses
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update selectcourses
    <set>
      <if test="record.userid != null">
        userID = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.courseid != null">
        courseID = #{record.courseid,jdbcType=INTEGER},
      </if>
      <if test="record.select != null">
        select = #{record.select,jdbcType=INTEGER},
      </if>
      <if test="record.downpath != null">
        downpath = #{record.downpath,jdbcType=VARCHAR},
      </if>
      <if test="record.downtime != null">
        downtime = #{record.downtime,jdbcType=VARCHAR},
      </if>
      <if test="record.note != null">
        note = #{record.note,jdbcType=VARCHAR},
      </if>
      <if test="record.notetime != null">
        notetime = #{record.notetime,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update selectcourses
    set userID = #{record.userid,jdbcType=INTEGER},
      courseID = #{record.courseid,jdbcType=INTEGER},
      select = #{record.select,jdbcType=INTEGER},
      downpath = #{record.downpath,jdbcType=VARCHAR},
      downtime = #{record.downtime,jdbcType=VARCHAR},
      note = #{record.note,jdbcType=VARCHAR},
      notetime = #{record.notetime,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.cuit.study.entity.Selectcourses">
    update selectcourses
    <set>
      <if test="select != null">
        select = #{select,jdbcType=INTEGER},
      </if>
      <if test="downpath != null">
        downpath = #{downpath,jdbcType=VARCHAR},
      </if>
      <if test="downtime != null">
        downtime = #{downtime,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="notetime != null">
        notetime = #{notetime,jdbcType=VARCHAR},
      </if>
    </set>
    where userID = #{userid,jdbcType=INTEGER}
      and courseID = #{courseid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.cuit.study.entity.Selectcourses">
    update selectcourses
    set select = #{select,jdbcType=INTEGER},
      downpath = #{downpath,jdbcType=VARCHAR},
      downtime = #{downtime,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR},
      notetime = #{notetime,jdbcType=VARCHAR}
    where userID = #{userid,jdbcType=INTEGER}
      and courseID = #{courseid,jdbcType=INTEGER}
  </update>
</mapper>