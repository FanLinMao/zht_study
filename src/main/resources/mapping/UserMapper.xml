<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.cuit.study.dao.UserMapper">
  <resultMap id="BaseResultMap" type="cn.edu.cuit.study.entity.User">
    <id column="userID" jdbcType="INTEGER" property="userID" />
    <result column="userName" jdbcType="VARCHAR" property="userName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="gender" jdbcType="CHAR" property="gender" />
    <result column="birth" jdbcType="VARCHAR" property="birth" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="role" jdbcType="INTEGER" property="role" />
    <result column="head" jdbcType="VARCHAR" property="head" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    userID, userName, password, gender, birth, phone, role, head
  </sql>
  <select id="selectByExample" parameterType="cn.edu.cuit.study.entity.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where userID = #{userid,jdbcType=INTEGER}
  </select>
  <select id="selectManagerByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where userID = #{userid,jdbcType=INTEGER}
    AND role=1
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where userID = #{userid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.edu.cuit.study.entity.User">
    insert into user (userID, userName, password, 
      gender, birth, phone, 
      role, head)
    values (#{userid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{gender,jdbcType=CHAR}, #{birth,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{role,jdbcType=INTEGER}, #{head,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.cuit.study.entity.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        userID,
      </if>
      <if test="username != null">
        userName,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="birth != null">
        birth,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="role != null">
        role,
      </if>
      <if test="head != null">
        head,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=CHAR},
      </if>
      <if test="birth != null">
        #{birth,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        #{role,jdbcType=INTEGER},
      </if>
      <if test="head != null">
        #{head,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.cuit.study.entity.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.userid != null">
        userID = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        userName = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=CHAR},
      </if>
      <if test="record.birth != null">
        birth = #{record.birth,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.role != null">
        role = #{record.role,jdbcType=INTEGER},
      </if>
      <if test="record.head != null">
        head = #{record.head,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set userID = #{record.userid,jdbcType=INTEGER},
      userName = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=CHAR},
      birth = #{record.birth,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      role = #{record.role,jdbcType=INTEGER},
      head = #{record.head,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.cuit.study.entity.User">
    update user
    <set>
      <if test="username != null">
        userName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=CHAR},
      </if>
      <if test="birth != null">
        birth = #{birth,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        role = #{role,jdbcType=INTEGER},
      </if>
      <if test="head != null">
        head = #{head,jdbcType=VARCHAR},
      </if>
    </set>
    where userID = #{userid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.cuit.study.entity.User">
    update user
    set userName = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=CHAR},
      birth = #{birth,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      role = #{role,jdbcType=INTEGER},
      head = #{head,jdbcType=VARCHAR}
    where userID = #{userid,jdbcType=INTEGER}
  </update>
</mapper>