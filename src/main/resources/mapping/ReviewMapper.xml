<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.cuit.study.dao.ReviewMapper">
  <resultMap id="BaseResultMap" type="cn.edu.cuit.study.entity.Review">
    <id column="courseid" jdbcType="INTEGER" property="courseid" />
    <id column="userid" jdbcType="INTEGER" property="userid" />
    <result column="review" jdbcType="VARCHAR" property="review" />
    <result column="reviewtime" jdbcType="VARCHAR" property="reviewtime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    courseid, userid, review, reviewtime
  </sql>
  <select id="selectByExample" parameterType="cn.edu.cuit.study.entity.ReviewExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from review
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="cn.edu.cuit.study.entity.ReviewKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from review
    where courseid = #{courseid,jdbcType=INTEGER}
      and userid = #{userid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="cn.edu.cuit.study.entity.ReviewKey">
    delete from review
    where courseid = #{courseid,jdbcType=INTEGER}
      and userid = #{userid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.edu.cuit.study.entity.Review">
    insert into review (courseid, userid, review, 
      reviewtime)
    values (#{courseid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{review,jdbcType=VARCHAR}, 
      #{reviewtime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.cuit.study.entity.Review">
    insert into review
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="courseid != null">
        courseid,
      </if>
      <if test="userid != null">
        userid,
      </if>
      <if test="review != null">
        review,
      </if>
      <if test="reviewtime != null">
        reviewtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="courseid != null">
        #{courseid,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="review != null">
        #{review,jdbcType=VARCHAR},
      </if>
      <if test="reviewtime != null">
        #{reviewtime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.cuit.study.entity.ReviewExample" resultType="java.lang.Long">
    select count(*) from review
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update review
    <set>
      <if test="record.courseid != null">
        courseid = #{record.courseid,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null">
        userid = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.review != null">
        review = #{record.review,jdbcType=VARCHAR},
      </if>
      <if test="record.reviewtime != null">
        reviewtime = #{record.reviewtime,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update review
    set courseid = #{record.courseid,jdbcType=INTEGER},
      userid = #{record.userid,jdbcType=INTEGER},
      review = #{record.review,jdbcType=VARCHAR},
      reviewtime = #{record.reviewtime,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.cuit.study.entity.Review">
    update review
    <set>
      <if test="review != null">
        review = #{review,jdbcType=VARCHAR},
      </if>
      <if test="reviewtime != null">
        reviewtime = #{reviewtime,jdbcType=VARCHAR},
      </if>
    </set>
    where courseid = #{courseid,jdbcType=INTEGER}
      and userid = #{userid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.cuit.study.entity.Review">
    update review
    set review = #{review,jdbcType=VARCHAR},
      reviewtime = #{reviewtime,jdbcType=VARCHAR}
    where courseid = #{courseid,jdbcType=INTEGER}
      and userid = #{userid,jdbcType=INTEGER}
  </update>
</mapper>